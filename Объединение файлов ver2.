package com.javarush.task.task18.task1819;

// Считать с консоли 2 имени файла.
//        В начало первого файла записать содержимое второго файла так, чтобы получилось объединение файлов.
//        Закрыть потоки.

//Требования:
//1. Программа должна два раза считать имена файлов с консоли.
//2. Не используй в программе статические переменные.
//3. Для первого файла создай поток для чтения и считай его содержимое.
//4. Затем, для первого файла создай поток для записи(поток для записи должен быть один). Для второго - для чтения.
//5. Содержимое первого и второго файла нужно объединить в первом файле.
//6. Сначала должно идти содержимое второго файла, затем содержимое первого.
//7. Созданные для файлов потоки должны быть закрыты.

import java.io.*;

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); // Открываем поток ввода с консоли.
        String fileOne = reader.readLine(); // Считываем с консоли первый файл.
        String fileTwo = reader.readLine(); // Считываем с консоли второй файл.

        try (FileInputStream inputStreamOne = new FileInputStream(fileOne); // Открываем поток для чтения первого файла.
             FileInputStream inputStreamTwo = new FileInputStream(fileTwo)) // Открываем поток для чтения второго файла.
        {
            byte[] buffer = new byte[inputStreamTwo.available() + inputStreamOne.available()];  // Создаем общий массив для файлов.

            inputStreamOne.read(buffer, inputStreamTwo.available(), inputStreamOne.available()); // Записываем первый файл в массив оставляя место для первого файла в начале массива.
            inputStreamTwo.read(buffer); // Дозаписываем данные второго файла в начало массива.
        FileOutputStream outputStream = new FileOutputStream(fileOne); // Открываем поток для записи в первый файл.
        outputStream.write(buffer); // Записываем массив данных в первый файл перезаписывая его.
        outputStream.close(); // Закрываем поток записи.
        } catch (IOException e) {
            System.err.println("Ошибка");
        }
    }
}
